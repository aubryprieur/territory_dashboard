<!-- Données économiques -->
<div class="bg-white shadow rounded-lg p-6 mb-6">
  <h2 class="text-lg font-medium text-gray-900 mb-4">Indicateurs socio-économiques</h2>
  <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
    <!-- Revenus médians historiques - transformé en graphique -->
    <div>
      <h3 class="text-sm font-medium text-gray-700 mb-2">Évolution des revenus médians (€)</h3>
      <div class="h-64">
        <canvas id="revenue-chart"></canvas>
      </div>
    </div>
    <!-- Tableau comparatif des revenus médians avec évolution des écarts -->
    <div>
      <h3 class="text-sm font-medium text-gray-700 mb-2">Comparaison des revenus médians (€)</h3>
      <%
        # Trouver l'année la plus récente commune à tous les territoires
        commune_years = @revenue_data&.dig("median_revenues")&.keys || []
        epci_years = @epci_revenue_data&.dig("median_revenues")&.keys || []
        department_years = @department_revenue_data&.dig("median_revenues")&.keys || []
        region_years = @region_revenue_data&.dig("median_revenues")&.keys || []
        france_years = @france_revenue_data&.dig("median_revenues")&.keys || []

        all_years = (commune_years + epci_years + department_years + region_years + france_years).uniq
        latest_year = all_years.sort.last
        oldest_year = all_years.sort.first

        # Récupérer les valeurs pour la commune
        commune_latest = @revenue_data&.dig("median_revenues", latest_year)
        commune_oldest = @revenue_data&.dig("median_revenues", oldest_year)
      %>

      <table class="min-w-full divide-y divide-gray-200">
        <thead>
          <tr>
            <th class="px-4 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Territoire</th>
            <th class="px-4 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Revenu médian (<%= latest_year || 'N/A' %>)
            </th>
            <th class="px-4 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Évolution des écarts (<%= oldest_year || 'N/A' %> - <%= latest_year || 'N/A' %>)
            </th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          <!-- Ligne pour la commune -->
          <tr>
            <td class="px-4 py-2 whitespace-nowrap text-sm font-medium text-gray-900">
              <%= @territory_name %>
            </td>
            <td class="px-4 py-2 whitespace-nowrap text-sm text-gray-900">
              <%= number_to_currency(commune_latest || 'N/A', unit: "€", separator: ",", delimiter: " ", format: "%n %u") %>
            </td>
            <td class="px-4 py-2 whitespace-nowrap text-sm text-gray-500">
              Référence
            </td>
          </tr>
          <!-- Ligne pour l'EPCI si disponible -->
          <% if @epci_revenue_data.present? %>
            <%
              epci_latest = @epci_revenue_data&.dig("median_revenues", latest_year)
              epci_oldest = @epci_revenue_data&.dig("median_revenues", oldest_year)

              # Calcul des écarts
              if commune_latest && epci_latest && commune_oldest && epci_oldest
                latest_gap = commune_latest - epci_latest
                oldest_gap = commune_oldest - epci_oldest
                gap_evolution = latest_gap - oldest_gap

                # Si la valeur est négative, la commune s'éloigne (creusement de l'écart)
                # Si la valeur est positive, la commune se rapproche (réduction de l'écart)
                gap_text = if gap_evolution < 0
                             "S'éloigne de #{number_to_currency(gap_evolution.abs, unit: "€", precision: 0, separator: ",", delimiter: " ", format: "%n %u")}"
                           elsif gap_evolution > 0
                             "Se rapproche de #{number_to_currency(gap_evolution.abs, unit: "€", precision: 0, separator: ",", delimiter: " ", format: "%n %u")}"
                           else
                             "Stable"
                           end
              else
                gap_text = "Données insuffisantes"
              end
            %>
            <tr>
              <td class="px-4 py-2 whitespace-nowrap text-sm text-gray-900">
                <%= @epci_revenue_data&.dig("name") || "EPCI" %>
              </td>
              <td class="px-4 py-2 whitespace-nowrap text-sm text-gray-900">
                <%= number_to_currency(epci_latest || 'N/A', unit: "€", separator: ",", delimiter: " ", format: "%n %u") %>
              </td>
              <td class="px-4 py-2 whitespace-nowrap text-sm
                  <%= gap_evolution && gap_evolution < 0 ? "text-red-600" : (gap_evolution && gap_evolution > 0 ? "text-green-600" : "text-gray-500") %>">
                <%= gap_text %>
              </td>
            </tr>
          <% end %>

          <!-- Ligne pour le département si disponible -->
          <% if @department_revenue_data.present? %>
            <%
              dept_latest = @department_revenue_data&.dig("median_revenues", latest_year)
              dept_oldest = @department_revenue_data&.dig("median_revenues", oldest_year)

              # Calcul des écarts
              if commune_latest && dept_latest && commune_oldest && dept_oldest
                latest_gap = commune_latest - dept_latest
                oldest_gap = commune_oldest - dept_oldest
                gap_evolution = latest_gap - oldest_gap

                # Si la valeur est négative, la commune s'éloigne (creusement de l'écart)
                # Si la valeur est positive, la commune se rapproche (réduction de l'écart)
                gap_text = if gap_evolution < 0
                             "S'éloigne de #{number_to_currency(gap_evolution.abs, unit: "€", precision: 0, separator: ",", delimiter: " ", format: "%n %u")}"
                           elsif gap_evolution > 0
                             "Se rapproche de #{number_to_currency(gap_evolution.abs, unit: "€", precision: 0, separator: ",", delimiter: " ", format: "%n %u")}"
                           else
                             "Stable"
                           end
              else
                gap_text = "Données insuffisantes"
              end
            %>
            <tr>
              <td class="px-4 py-2 whitespace-nowrap text-sm text-gray-900">
                <%= @department_revenue_data&.dig("name") || "Département" %>
              </td>
              <td class="px-4 py-2 whitespace-nowrap text-sm text-gray-900">
                <%= number_to_currency(dept_latest || 'N/A', unit: "€", separator: ",", delimiter: " ", format: "%n %u") %>
              </td>
              <td class="px-4 py-2 whitespace-nowrap text-sm
                  <%= gap_evolution && gap_evolution < 0 ? "text-red-600" : (gap_evolution && gap_evolution > 0 ? "text-green-600" : "text-gray-500") %>">
                <%= gap_text %>
              </td>
            </tr>
          <% end %>

          <!-- Ligne pour la région si disponible -->
          <% if @region_revenue_data.present? %>
            <%
              region_latest = @region_revenue_data&.dig("median_revenues", latest_year)
              region_oldest = @region_revenue_data&.dig("median_revenues", oldest_year)

              # Calcul des écarts
              if commune_latest && region_latest && commune_oldest && region_oldest
                latest_gap = commune_latest - region_latest
                oldest_gap = commune_oldest - region_oldest
                gap_evolution = latest_gap - oldest_gap

                # Si la valeur est négative, la commune s'éloigne (creusement de l'écart)
                # Si la valeur est positive, la commune se rapproche (réduction de l'écart)
                gap_text = if gap_evolution < 0
                             "S'éloigne de #{number_to_currency(gap_evolution.abs, unit: "€", precision: 0, separator: ",", delimiter: " ", format: "%n %u")}"
                           elsif gap_evolution > 0
                             "Se rapproche de #{number_to_currency(gap_evolution.abs, unit: "€", precision: 0, separator: ",", delimiter: " ", format: "%n %u")}"
                           else
                             "Stable"
                           end
              else
                gap_text = "Données insuffisantes"
              end
            %>
            <tr>
              <td class="px-4 py-2 whitespace-nowrap text-sm text-gray-900">
                <%= @region_revenue_data&.dig("name") || "Région" %>
              </td>
              <td class="px-4 py-2 whitespace-nowrap text-sm text-gray-900">
                <%= number_to_currency(region_latest || 'N/A', unit: "€", separator: ",", delimiter: " ", format: "%n %u") %>
              </td>
              <td class="px-4 py-2 whitespace-nowrap text-sm
                  <%= gap_evolution && gap_evolution < 0 ? "text-red-600" : (gap_evolution && gap_evolution > 0 ? "text-green-600" : "text-gray-500") %>">
                <%= gap_text %>
              </td>
            </tr>
          <% end %>

          <!-- Ligne pour la France -->
          <% if @france_revenue_data.present? %>
            <%
              france_latest = @france_revenue_data&.dig("median_revenues", latest_year)
              france_oldest = @france_revenue_data&.dig("median_revenues", oldest_year)

              # Calcul des écarts
              if commune_latest && france_latest && commune_oldest && france_oldest
                latest_gap = commune_latest - france_latest
                oldest_gap = commune_oldest - france_oldest
                gap_evolution = latest_gap - oldest_gap

                # Si la valeur est négative, la commune s'éloigne (creusement de l'écart)
                # Si la valeur est positive, la commune se rapproche (réduction de l'écart)
                gap_text = if gap_evolution < 0
                             "S'éloigne de #{number_to_currency(gap_evolution.abs, unit: "€", precision: 0, separator: ",", delimiter: " ", format: "%n %u")}"
                           elsif gap_evolution > 0
                             "Se rapproche de #{number_to_currency(gap_evolution.abs, unit: "€", precision: 0, separator: ",", delimiter: " ", format: "%n %u")}"
                           else
                             "Stable"
                           end
              else
                gap_text = "Données insuffisantes"
              end
            %>
            <tr>
              <td class="px-4 py-2 whitespace-nowrap text-sm font-medium text-gray-900">
                France
              </td>
              <td class="px-4 py-2 whitespace-nowrap text-sm text-gray-900">
                <%= number_to_currency(france_latest || 'N/A', unit: "€", separator: ",", delimiter: " ", format: "%n %u") %>
              </td>
              <td class="px-4 py-2 whitespace-nowrap text-sm
                  <%= gap_evolution && gap_evolution < 0 ? "text-red-600" : (gap_evolution && gap_evolution > 0 ? "text-green-600" : "text-gray-500") %>">
                <%= gap_text %>
              </td>
            </tr>
          <% end %>
        </tbody>
      </table>
    </div>
  </div>

  <!-- Deuxième rangée pour les taux de pauvreté -->
  <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
    <!-- Taux de pauvreté historiques - transformé en graphique -->
    <div>
      <h3 class="text-sm font-medium text-gray-700 mb-2">Évolution du taux de pauvreté (%)</h3>
      <div class="h-64">
        <canvas id="poverty-chart"></canvas>
      </div>
    </div>

    <!-- Nouveau tableau comparatif des taux de pauvreté -->
    <div>
      <h3 class="text-sm font-medium text-gray-700 mb-2">Comparaison des taux de pauvreté (%)</h3>
      <%
        # Trouver l'année la plus récente commune à tous les territoires pour les taux de pauvreté
        commune_poverty_years = @revenue_data&.dig("poverty_rates")&.keys || []
        epci_poverty_years = @epci_revenue_data&.dig("poverty_rates")&.keys || []
        department_poverty_years = @department_revenue_data&.dig("poverty_rates")&.keys || []
        region_poverty_years = @region_revenue_data&.dig("poverty_rates")&.keys || []
        france_poverty_years = @france_revenue_data&.dig("poverty_rates")&.keys || []

        all_poverty_years = (commune_poverty_years + epci_poverty_years + department_poverty_years + region_poverty_years + france_poverty_years).uniq
        latest_poverty_year = all_poverty_years.sort.last
      %>

      <table class="min-w-full divide-y divide-gray-200">
        <thead>
          <tr>
            <th class="px-4 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Territoire</th>
            <th class="px-4 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Taux de pauvreté (<%= latest_poverty_year || 'N/A' %>)
            </th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          <!-- Ligne pour la commune -->
          <tr>
            <td class="px-4 py-2 whitespace-nowrap text-sm font-medium text-gray-900">
              <%= @territory_name %>
            </td>
            <td class="px-4 py-2 whitespace-nowrap text-sm text-gray-900">
              <%= number_to_percentage(@revenue_data&.dig("poverty_rates", latest_poverty_year) || 'N/A', precision: 1) %>
            </td>
          </tr>

          <!-- Ligne pour l'EPCI si disponible -->
          <% if @epci_revenue_data.present? %>
            <tr>
              <td class="px-4 py-2 whitespace-nowrap text-sm text-gray-900">
                <%= @epci_revenue_data&.dig("name") || "EPCI" %>
              </td>
              <td class="px-4 py-2 whitespace-nowrap text-sm text-gray-900">
                <%= number_to_percentage(@epci_revenue_data&.dig("poverty_rates", latest_poverty_year) || 'N/A', precision: 1) %>
              </td>
            </tr>
          <% end %>

          <!-- Ligne pour le département si disponible -->
          <% if @department_revenue_data.present? %>
            <tr>
              <td class="px-4 py-2 whitespace-nowrap text-sm text-gray-900">
                <%= @department_revenue_data&.dig("name") || "Département" %>
              </td>
              <td class="px-4 py-2 whitespace-nowrap text-sm text-gray-900">
                <%= number_to_percentage(@department_revenue_data&.dig("poverty_rates", latest_poverty_year) || 'N/A', precision: 1) %>
              </td>
            </tr>
          <% end %>

          <!-- Ligne pour la région si disponible -->
          <% if @region_revenue_data.present? %>
            <tr>
              <td class="px-4 py-2 whitespace-nowrap text-sm text-gray-900">
                <%= @region_revenue_data&.dig("name") || "Région" %>
              </td>
              <td class="px-4 py-2 whitespace-nowrap text-sm text-gray-900">
                <%= number_to_percentage(@region_revenue_data&.dig("poverty_rates", latest_poverty_year) || 'N/A', precision: 1) %>
              </td>
            </tr>
          <% end %>

          <!-- Ligne pour la France -->
          <tr>
            <td class="px-4 py-2 whitespace-nowrap text-sm font-medium text-gray-900">
              France
            </td>
            <td class="px-4 py-2 whitespace-nowrap text-sm text-gray-900">
              <%= number_to_percentage(@france_revenue_data&.dig("poverty_rates", latest_poverty_year) || 'N/A', precision: 1) %>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</div>
