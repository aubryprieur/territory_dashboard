<div class="min-h-screen bg-gradient-to-br from-indigo-50 via-white to-purple-50" data-controller="tabs" data-tabs-default-tab-value="population">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- En-tête du dashboard avec effet glassmorphism -->
    <div class="bg-white/70 backdrop-blur-md rounded-2xl shadow-xl border border-white/20 p-8 mb-8">
      <div class="flex flex-col lg:flex-row justify-between items-start lg:items-center gap-4">
        <div class="flex items-center space-x-4">
          <div class="bg-gradient-to-r from-indigo-500 to-purple-600 p-3 rounded-xl shadow-lg">
            <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
            </svg>
          </div>
          <div>
            <h1 class="text-3xl font-bold bg-gradient-to-r from-gray-900 to-gray-600 bg-clip-text text-transparent">
              <%= @epci_name %>
            </h1>
            <p class="text-gray-600 mt-1">Dashboard territorial interactif</p>
          </div>
        </div>
        <div class="flex items-center space-x-3">
          <span class="px-4 py-2 bg-gradient-to-r from-indigo-500 to-purple-600 text-white rounded-full text-sm font-semibold shadow-lg">
            EPCI: <%= @epci_code %>
          </span>
          <div class="bg-green-100 border border-green-200 px-4 py-2 rounded-full">
            <span class="text-green-800 text-sm font-medium">
              <%= @epci_communes_data&.dig("communes")&.count || 0 %> communes
            </span>
          </div>
        </div>
      </div>
    </div>

    <!-- Section accès aux communes avec design de carte moderne -->
    <div class="bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg border border-white/30 p-6 mb-8 hover:shadow-xl transition-all duration-300">
      <div class="flex items-center justify-between mb-6">
        <div class="flex items-center space-x-3">
          <div class="bg-gradient-to-r from-blue-500 to-cyan-500 p-2 rounded-lg">
            <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
            </svg>
          </div>
          <h3 class="text-lg font-semibold text-gray-800">Explorer les communes</h3>
        </div>
        <div class="text-sm text-gray-500 bg-gray-100 px-3 py-1 rounded-full">
          Données détaillées par commune
        </div>
      </div>

      <!-- Search box moderne avec autocomplétion -->
      <div class="relative">
        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
          <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
          </svg>
        </div>
        <input type="text"
               id="commune-search"
               class="block w-full pl-10 pr-12 py-4 border-2 border-gray-200 rounded-xl leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200"
               placeholder="Rechercher une commune... (ex: Soissons, Château-Thierry)"
               autocomplete="off">
        <div class="absolute inset-y-0 right-0 pr-3 flex items-center">
          <kbd class="inline-flex items-center border border-gray-200 rounded px-2 py-1 text-xs font-sans font-medium text-gray-400">
            ⌘K
          </kbd>
        </div>
      </div>

      <!-- Dropdown results avec animation -->
      <div id="commune-results" class="hidden mt-2 bg-white rounded-xl shadow-lg border border-gray-200 max-h-60 overflow-y-auto">
        <!-- Les résultats seront injectés ici par JavaScript -->
      </div>
    </div>

<!-- Navigation par onglets avec design moderne -->
<div class="bg-white/60 backdrop-blur-sm rounded-2xl shadow-lg border border-white/30 mb-8 overflow-hidden">
  <div class="p-2 relative">
    <!-- Flèche gauche -->
    <button id="scroll-left"
            class="absolute left-2 top-1/2 -translate-y-1/2 z-10 bg-white/80 backdrop-blur-sm rounded-full p-2 shadow-lg border border-white/50 hover:bg-white/90 transition-all duration-300 hover:scale-110 opacity-0">
      <svg class="w-5 h-5 text-gray-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
      </svg>
    </button>

    <!-- Flèche droite -->
    <button id="scroll-right"
            class="absolute right-2 top-1/2 -translate-y-1/2 z-10 bg-white/80 backdrop-blur-sm rounded-full p-2 shadow-lg border border-white/50 hover:bg-white/90 transition-all duration-300 hover:scale-110">
      <svg class="w-5 h-5 text-gray-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
      </svg>
    </button>

    <!-- Gradients pour indiquer le défilement -->
    <div class="absolute left-0 top-0 bottom-0 w-12 bg-gradient-to-r from-white/60 to-transparent pointer-events-none z-5 opacity-0" id="gradient-left"></div>
    <div class="absolute right-0 top-0 bottom-0 w-12 bg-gradient-to-l from-white/60 to-transparent pointer-events-none z-5" id="gradient-right"></div>
        <nav class="flex space-x-1 overflow-x-auto scrollbar-hide scroll-smooth" id="tabs-container">
          <!-- Onglet Population -->
          <button data-tabs-target="tab"
                  data-action="click->tabs#switch"
                  data-tab-id="population"
                  class="group flex items-center px-4 py-3 rounded-xl font-medium text-sm transition-all duration-300 whitespace-nowrap min-w-fit hover:bg-white/50 text-gray-600 hover:text-gray-800">
            <div class="flex items-center space-x-3">
              <div class="p-2 rounded-lg bg-gradient-to-r from-indigo-100 to-purple-100 group-hover:from-indigo-200 group-hover:to-purple-200 transition-all duration-300">
                <svg class="w-5 h-5 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                </svg>
              </div>
              <div class="text-left">
                <div class="font-semibold">Population</div>
                <div class="text-xs text-gray-500">Démographie & répartition</div>
              </div>
            </div>
          </button>

          <!-- Onglet Naissances -->
          <button data-tabs-target="tab"
                  data-action="click->tabs#switch"
                  data-tab-id="births"
                  class="group flex items-center px-4 py-3 rounded-xl font-medium text-sm transition-all duration-300 whitespace-nowrap min-w-fit hover:bg-white/50 text-gray-600 hover:text-gray-800">
            <div class="flex items-center space-x-3">
              <div class="p-2 rounded-lg bg-gradient-to-r from-pink-100 to-rose-100 group-hover:from-pink-200 group-hover:to-rose-200 transition-all duration-300">
                <svg class="w-5 h-5 text-pink-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
                </svg>
              </div>
              <div class="text-left">
                <div class="font-semibold">Naissances</div>
                <div class="text-xs text-gray-500">Natalité & évolution</div>
              </div>
            </div>
          </button>

          <!-- Onglet Familles -->
          <button data-tabs-target="tab"
                  data-action="click->tabs#switch"
                  data-tab-id="families"
                  class="group flex items-center px-4 py-3 rounded-xl font-medium text-sm transition-all duration-300 whitespace-nowrap min-w-fit hover:bg-white/50 text-gray-600 hover:text-gray-800">
            <div class="flex items-center space-x-3">
              <div class="p-2 rounded-lg bg-gradient-to-r from-emerald-100 to-teal-100 group-hover:from-emerald-200 group-hover:to-teal-200 transition-all duration-300">
                <svg class="w-5 h-5 text-emerald-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 21v-4m0 0V9a5 5 0 0110 0v8m0 0v4m0-4H3m18 0v4m0-4V9a5 5 0 00-10 0v8m0 0H21"></path>
                </svg>
              </div>
              <div class="text-left">
                <div class="font-semibold">Familles</div>
                <div class="text-xs text-gray-500">Structures familiales</div>
              </div>
            </div>
          </button>

          <!-- Onglet Enfants -->
          <button data-tabs-target="tab"
                  data-action="click->tabs#switch"
                  data-tab-id="children"
                  class="group flex items-center px-4 py-3 rounded-xl font-medium text-sm transition-all duration-300 whitespace-nowrap min-w-fit hover:bg-white/50 text-gray-600 hover:text-gray-800">
            <div class="flex items-center space-x-3">
              <div class="p-2 rounded-lg bg-gradient-to-r from-yellow-100 to-orange-100 group-hover:from-yellow-200 group-hover:to-orange-200 transition-all duration-300">
                <svg class="w-5 h-5 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.828 14.828a4 4 0 01-5.656 0M9 10h1m4 0h1M9 16v-2a2 2 0 012-2h2a2 2 0 012 2v2"></path>
                </svg>
              </div>
              <div class="text-left">
                <div class="font-semibold">Enfants</div>
                <div class="text-xs text-gray-500">Petite enfance</div>
              </div>
            </div>
          </button>

          <!-- Onglet Scolarisation -->
          <button data-tabs-target="tab"
                  data-action="click->tabs#switch"
                  data-tab-id="schooling"
                  class="group flex items-center px-4 py-3 rounded-xl font-medium text-sm transition-all duration-300 whitespace-nowrap min-w-fit hover:bg-white/50 text-gray-600 hover:text-gray-800">
            <div class="flex items-center space-x-3">
              <div class="p-2 rounded-lg bg-gradient-to-r from-blue-100 to-cyan-100 group-hover:from-blue-200 group-hover:to-cyan-200 transition-all duration-300">
                <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
                </svg>
              </div>
              <div class="text-left">
                <div class="font-semibold">Scolarisation</div>
                <div class="text-xs text-gray-500">Éducation & écoles</div>
              </div>
            </div>
          </button>

          <!-- Onglet Économie -->
          <button data-tabs-target="tab"
                  data-action="click->tabs#switch"
                  data-tab-id="economy"
                  class="group flex items-center px-4 py-3 rounded-xl font-medium text-sm transition-all duration-300 whitespace-nowrap min-w-fit hover:bg-white/50 text-gray-600 hover:text-gray-800">
            <div class="flex items-center space-x-3">
              <div class="p-2 rounded-lg bg-gradient-to-r from-green-100 to-emerald-100 group-hover:from-green-200 group-hover:to-emerald-200 transition-all duration-300">
                <svg class="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
                </svg>
              </div>
              <div class="text-left">
                <div class="font-semibold">Économie</div>
                <div class="text-xs text-gray-500">Revenus & pauvreté</div>
              </div>
            </div>
          </button>

          <!-- Onglet Petite Enfance -->
          <button data-tabs-target="tab"
                  data-action="click->tabs#switch"
                  data-tab-id="childcare"
                  class="group flex items-center px-4 py-3 rounded-xl font-medium text-sm transition-all duration-300 whitespace-nowrap min-w-fit hover:bg-white/50 text-gray-600 hover:text-gray-800">
            <div class="flex items-center space-x-3">
              <div class="p-2 rounded-lg bg-gradient-to-r from-purple-100 to-violet-100 group-hover:from-purple-200 group-hover:to-violet-200 transition-all duration-300">
                <svg class="w-5 h-5 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
                </svg>
              </div>
              <div class="text-left">
                <div class="font-semibold">Petite Enfance</div>
                <div class="text-xs text-gray-500">Accueil & garde</div>
              </div>
            </div>
          </button>

          <!-- Onglet Emploi Familles -->
          <button data-tabs-target="tab"
                  data-action="click->tabs#switch"
                  data-tab-id="family-employment"
                  class="group flex items-center px-4 py-3 rounded-xl font-medium text-sm transition-all duration-300 whitespace-nowrap min-w-fit hover:bg-white/50 text-gray-600 hover:text-gray-800">
            <div class="flex items-center space-x-3">
              <div class="p-2 rounded-lg bg-gradient-to-r from-teal-100 to-cyan-100 group-hover:from-teal-200 group-hover:to-cyan-200 transition-all duration-300">
                <svg class="w-5 h-5 text-teal-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2-2v2m8 0V6a2 2 0 012 2v6a2 2 0 01-2 2H6a2 2 0 01-2-2V8a2 2 0 012-2V6"></path>
                </svg>
              </div>
              <div class="text-left">
                <div class="font-semibold">Emploi Familles</div>
                <div class="text-xs text-gray-500">Activité professionnelle</div>
              </div>
            </div>
          </button>

          <!-- Onglet Emploi Femmes -->
          <button data-tabs-target="tab"
                  data-action="click->tabs#switch"
                  data-tab-id="women-employment"
                  class="group flex items-center px-4 py-3 rounded-xl font-medium text-sm transition-all duration-300 whitespace-nowrap min-w-fit hover:bg-white/50 text-gray-600 hover:text-gray-800">
            <div class="flex items-center space-x-3">
              <div class="p-2 rounded-lg bg-gradient-to-r from-rose-100 to-pink-100 group-hover:from-rose-200 group-hover:to-pink-200 transition-all duration-300">
                <svg class="w-5 h-5 text-rose-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                </svg>
              </div>
              <div class="text-left">
                <div class="font-semibold">Emploi Femmes</div>
                <div class="text-xs text-gray-500">Activité féminine</div>
              </div>
            </div>
          </button>

          <!-- Onglet Violences -->
          <button data-tabs-target="tab"
                  data-action="click->tabs#switch"
                  data-tab-id="violence"
                  class="group flex items-center px-4 py-3 rounded-xl font-medium text-sm transition-all duration-300 whitespace-nowrap min-w-fit hover:bg-white/50 text-gray-600 hover:text-gray-800">
            <div class="flex items-center space-x-3">
              <div class="p-2 rounded-lg bg-gradient-to-r from-red-100 to-orange-100 group-hover:from-red-200 group-hover:to-orange-200 transition-all duration-300">
                <svg class="w-5 h-5 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path>
                </svg>
              </div>
              <div class="text-left">
                <div class="font-semibold">Violences</div>
                <div class="text-xs text-gray-500">Sécurité intrafamiliale</div>
              </div>
            </div>
          </button>
        </nav>
      </div>
    </div>

    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const tabsContainer = document.getElementById('tabs-container');
        const scrollLeftBtn = document.getElementById('scroll-left');
        const scrollRightBtn = document.getElementById('scroll-right');
        const gradientLeft = document.getElementById('gradient-left');
        const gradientRight = document.getElementById('gradient-right');

        // Fonction pour vérifier la position de défilement
        function checkScroll() {
          const scrollLeft = tabsContainer.scrollLeft;
          const scrollWidth = tabsContainer.scrollWidth;
          const clientWidth = tabsContainer.clientWidth;
          const maxScroll = scrollWidth - clientWidth;

          // Afficher/masquer la flèche gauche
          if (scrollLeft > 10) {
            scrollLeftBtn.classList.remove('opacity-0');
            scrollLeftBtn.classList.add('opacity-100');
            gradientLeft.classList.remove('opacity-0');
            gradientLeft.classList.add('opacity-100');
          } else {
            scrollLeftBtn.classList.remove('opacity-100');
            scrollLeftBtn.classList.add('opacity-0');
            gradientLeft.classList.remove('opacity-100');
            gradientLeft.classList.add('opacity-0');
          }

          // Afficher/masquer la flèche droite
          if (scrollLeft < maxScroll - 10) {
            scrollRightBtn.classList.remove('opacity-0');
            scrollRightBtn.classList.add('opacity-100');
            gradientRight.classList.remove('opacity-0');
            gradientRight.classList.add('opacity-100');
          } else {
            scrollRightBtn.classList.remove('opacity-100');
            scrollRightBtn.classList.add('opacity-0');
            gradientRight.classList.remove('opacity-100');
            gradientRight.classList.add('opacity-0');
          }
        }

        // Défilement avec les flèches
        scrollLeftBtn.addEventListener('click', function() {
          tabsContainer.scrollBy({ left: -200, behavior: 'smooth' });
        });

        scrollRightBtn.addEventListener('click', function() {
          tabsContainer.scrollBy({ left: 200, behavior: 'smooth' });
        });

        // Vérifier le défilement lors du chargement et lors du scroll
        tabsContainer.addEventListener('scroll', checkScroll);
        window.addEventListener('resize', checkScroll);

        // Vérification initiale
        setTimeout(checkScroll, 100);
      });
    </script>

    <!-- Panneaux de contenu avec animation -->
    <div class="tab-content">
      <!-- Panel Population -->
      <div data-tabs-target="panel" data-tab-id="population" class="hidden animate-fadeIn">
        <div class="bg-white/70 backdrop-blur-sm rounded-2xl shadow-lg border border-white/30 p-6">
          <%= render "epci_dashboard/population" %>
        </div>
      </div>

      <!-- Panel Naissances -->
      <div data-tabs-target="panel" data-tab-id="births" class="hidden animate-fadeIn">
        <div class="bg-white/70 backdrop-blur-sm rounded-2xl shadow-lg border border-white/30 p-6">
          <%= render "epci_dashboard/communes_births" %>
        </div>
      </div>

      <!-- Panel Familles -->
      <div data-tabs-target="panel" data-tab-id="families" class="hidden animate-fadeIn">
        <div class="bg-white/70 backdrop-blur-sm rounded-2xl shadow-lg border border-white/30 p-6">
          <%= render "epci_dashboard/families" %>
        </div>
      </div>

      <!-- Panel Enfants -->
      <div data-tabs-target="panel" data-tab-id="children" class="hidden animate-fadeIn">
        <div class="bg-white/70 backdrop-blur-sm rounded-2xl shadow-lg border border-white/30 p-6">
          <%= render "epci_dashboard/communes_children" %>
        </div>
      </div>

      <!-- Panel Scolarisation -->
      <div data-tabs-target="panel" data-tab-id="schooling" class="hidden animate-fadeIn">
        <div class="bg-white/70 backdrop-blur-sm rounded-2xl shadow-lg border border-white/30 p-6">
          <%= render "epci_dashboard/schooling" %>
        </div>
      </div>

      <!-- Panel Économie -->
      <div data-tabs-target="panel" data-tab-id="economy" class="hidden animate-fadeIn">
        <div class="bg-white/70 backdrop-blur-sm rounded-2xl shadow-lg border border-white/30 p-6">
          <%= render "epci_dashboard/economic_data" %>
        </div>
      </div>

      <!-- Panel Petite Enfance -->
      <div data-tabs-target="panel" data-tab-id="childcare" class="hidden animate-fadeIn">
        <div class="bg-white/70 backdrop-blur-sm rounded-2xl shadow-lg border border-white/30 p-6">
          <%= render "epci_dashboard/childcare" %>
        </div>
      </div>

      <!-- Panel Emploi Familles -->
      <div data-tabs-target="panel" data-tab-id="family-employment" class="hidden animate-fadeIn">
        <div class="bg-white/70 backdrop-blur-sm rounded-2xl shadow-lg border border-white/30 p-6">
          <%= render "epci_dashboard/family_employment" %>
        </div>
      </div>

      <!-- Panel Emploi Femmes -->
      <div data-tabs-target="panel" data-tab-id="women-employment" class="hidden animate-fadeIn">
        <div class="bg-white/70 backdrop-blur-sm rounded-2xl shadow-lg border border-white/30 p-6">
          <%= render "epci_dashboard/women_employment" %>
        </div>
      </div>

      <!-- Panel Violences -->
      <div data-tabs-target="panel" data-tab-id="violence" class="hidden animate-fadeIn">
        <div class="bg-white/70 backdrop-blur-sm rounded-2xl shadow-lg border border-white/30 p-6">
          <%= render "epci_dashboard/domestic_violence" %>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
// Fonction pour ouvrir le dashboard d'une commune
function openCommuneDashboard(communeCode) {
  if (communeCode) {
    const url = `/dashboard?commune_code=${communeCode}`;
    window.open(url, '_blank');
  }
}

// Fonction pour masquer les résultats de recherche (globale)
window.hideResults = function() {
  const resultsContainer = document.getElementById('commune-results');
  const searchInput = document.getElementById('commune-search');
  if (resultsContainer) resultsContainer.classList.add('hidden');
  if (searchInput) searchInput.value = '';
}

// Recherche intelligente de communes
document.addEventListener('DOMContentLoaded', function() {
  const searchInput = document.getElementById('commune-search');
  const resultsContainer = document.getElementById('commune-results');

  // Vérifier que les éléments existent
  if (!searchInput || !resultsContainer) {
    console.warn('Éléments de recherche non trouvés');
    return;
  }

  // Données des communes - utiliser une structure robuste
  const communes = [];

  <% if @epci_communes_data && @epci_communes_data["communes"] %>
    <% @epci_communes_data["communes"].each do |commune| %>
      <% if commune["code"] && commune["name"] %>
        communes.push({
          code: '<%= commune["code"].to_s.gsub("'", "\\'") %>',
          name: '<%= commune["name"].to_s.gsub("'", "\\'") %>',
          population: <%= (commune["population"] || 0).to_i %>
        });
      <% end %>
    <% end %>
  <% end %>

  console.log(`Recherche initialisée avec ${communes.length} communes`);

  let debounceTimer;
  let selectedIndex = -1;

  // Fonction de recherche avec debounce
  function searchCommunes(query) {
    if (!query || query.length < 2) return [];

    const normalizedQuery = query.toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g, "");

    const filtered = communes.filter(commune => {
      const normalizedName = commune.name.toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g, "");
      return normalizedName.includes(normalizedQuery);
    });

    // Trier par pertinence (communes qui commencent par la recherche en premier)
    filtered.sort((a, b) => {
      const aStarts = a.name.toLowerCase().startsWith(query.toLowerCase());
      const bStarts = b.name.toLowerCase().startsWith(query.toLowerCase());
      if (aStarts && !bStarts) return -1;
      if (!aStarts && bStarts) return 1;
      return a.name.localeCompare(b.name);
    });

    return filtered.slice(0, 8); // Limiter à 8 résultats
  }

  // Fonction pour afficher les résultats
  function displayResults(results) {
    if (results.length === 0) {
      resultsContainer.innerHTML = `
        <div class="p-4 text-center text-gray-500">
          <svg class="w-8 h-8 mx-auto mb-2 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
          </svg>
          Aucune commune trouvée
        </div>
      `;
      selectedIndex = -1;
      return;
    }

    const html = results.map((commune, index) => `
      <button onclick="openCommuneDashboard('${commune.code}'); window.hideResults();"
              onmouseover="this.classList.add('bg-blue-50')"
              onmouseout="this.classList.remove('bg-blue-50')"
              data-index="${index}"
              class="commune-result w-full flex items-center justify-between p-4 hover:bg-blue-50 transition-colors duration-200 text-left border-b border-gray-100 last:border-b-0">
        <div class="flex items-center space-x-3">
          <div class="w-8 h-8 bg-gradient-to-r from-blue-500 to-indigo-500 rounded-lg flex items-center justify-center">
            <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5"></path>
            </svg>
          </div>
          <div>
            <div class="font-medium text-gray-900">${commune.name}</div>
          </div>
        </div>
        <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </button>
    `).join('');

    resultsContainer.innerHTML = html;
    selectedIndex = -1;
  }

  // Event listener pour la recherche avec gestion d'erreurs
  searchInput.addEventListener('input', function(e) {
    try {
      const query = e.target.value.trim();

      clearTimeout(debounceTimer);

      if (query.length < 2) {
        resultsContainer.classList.add('hidden');
        selectedIndex = -1;
        return;
      }

      debounceTimer = setTimeout(() => {
        const results = searchCommunes(query);
        displayResults(results);
        resultsContainer.classList.remove('hidden');
      }, 150);
    } catch (error) {
      console.error('Erreur lors de la recherche:', error);
    }
  });

  // Fermer les résultats en cliquant ailleurs
  document.addEventListener('click', function(e) {
    if (!searchInput.contains(e.target) && !resultsContainer.contains(e.target)) {
      resultsContainer.classList.add('hidden');
    }
  });

  // Navigation au clavier dans les résultats
  searchInput.addEventListener('keydown', function(e) {
    const results = resultsContainer.querySelectorAll('.commune-result');

    if (e.key === 'ArrowDown') {
      e.preventDefault();
      selectedIndex = Math.min(selectedIndex + 1, results.length - 1);
      updateSelection(results);
    } else if (e.key === 'ArrowUp') {
      e.preventDefault();
      selectedIndex = Math.max(selectedIndex - 1, -1);
      updateSelection(results);
    } else if (e.key === 'Enter' && selectedIndex >= 0 && results[selectedIndex]) {
      e.preventDefault();
      results[selectedIndex].click();
    } else if (e.key === 'Escape') {
      window.hideResults();
      searchInput.blur();
    }
  });

  function updateSelection(results) {
    results.forEach((result, index) => {
      result.classList.toggle('bg-blue-50', index === selectedIndex);
    });
  }

  // Réinitialiser la sélection quand on tape
  searchInput.addEventListener('input', function() {
    selectedIndex = -1;
  });

  // Raccourci clavier ⌘K ou Ctrl+K
  document.addEventListener('keydown', function(e) {
    if ((e.metaKey || e.ctrlKey) && e.key === 'k') {
      e.preventDefault();
      searchInput.focus();
      searchInput.select(); // Sélectionner le texte existant
    }
  });

  // Focus sur la barre de recherche au chargement si elle est vide
  if (communes.length > 0 && !searchInput.value) {
    // Optionnel : décommenter pour focus automatique
    // searchInput.focus();
  }
});

// Animation pour les onglets actifs (séparé de la recherche)
document.addEventListener('DOMContentLoaded', function() {
  const tabs = document.querySelectorAll('[data-tabs-target="tab"]');

  tabs.forEach(tab => {
    tab.addEventListener('click', function() {
      // Retirer les styles actifs de tous les onglets
      tabs.forEach(t => {
        t.classList.remove('bg-white', 'shadow-lg', 'text-gray-900', 'scale-105');
        t.classList.add('text-gray-600', 'hover:text-gray-800');
      });

      // Ajouter les styles actifs à l'onglet cliqué
      this.classList.remove('text-gray-600', 'hover:text-gray-800');
      this.classList.add('bg-white', 'shadow-lg', 'text-gray-900', 'scale-105');

      // Animation de pulsation sur l'icône
      const icon = this.querySelector('svg');
      if (icon) {
        icon.classList.add('animate-pulse');
        setTimeout(() => {
          icon.classList.remove('animate-pulse');
        }, 1000);
      }
    });
  });

  // Activer l'onglet par défaut (basé sur le contrôleur Stimulus)
  setTimeout(() => {
    const activeTab = document.querySelector('[data-tabs-target="tab"].bg-indigo-100');
    if (activeTab) {
      activeTab.classList.remove('bg-indigo-100', 'text-indigo-700', 'border-indigo-500');
      activeTab.classList.add('bg-white', 'shadow-lg', 'text-gray-900');
    }
  }, 100);
});
</script>
